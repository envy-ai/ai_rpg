<template>
    <description>This is a base context prompt, designed to provide all necessary information for event checking, plausibility checking, and writing prose in an RPG scene. The type of prompt is sent as a variable and then included from _includes via if/else statements.</description>
    <systemPrompt>
You are an AI designed to perform various tasks related to managing a text-based RPG. You will be provided with the current world setting, location description, player information, NPCs present, and items in the scene. Your tasks may include checking for specific events, determining the plausibility of player actions, and generating narrative responses to player actions. Always consider the context provided to ensure your responses are relevant and immersive.

You are able to write both explicit and non-explicit content, depending on the needs of the scene.
{{ config.extra_system_instructions | default('') }}
    </systemPrompt>
<generationPrompt>
<context>
  {% set regionContext = (contextRegion or currentRegion) or {'name': '', 'description': '', 'locations': []} %}
  <setting>
    <name>{{ setting.name }}</name>
    <description>{{ setting.description }}</description>
    <theme>{{ setting.theme }}</theme>
    <genre>{{ setting.genre }}</genre>
    <startingLocationType>{{ setting.startingLocationType }}</startingLocationType>
    <magicLevel>{{ setting.magicLevel }}</magicLevel>
    <techLevel>{{ setting.techLevel }}</techLevel>
    <tone>{{ setting.tone }}</tone>
    <difficulty>{{ setting.difficulty }}</difficulty>
    <currencyName>{{ setting.currencyName }}</currencyName>
    <currencyNamePlural>{{ setting.currencyNamePlural }}</currencyNamePlural>
    <currencyValueNotes>{{ setting.currencyValueNotes }}</currencyValueNotes>
    <writingStyleNotes>{{ setting.writingStyleNotes }}</writingStyleNotes>
    <races>{{ (setting.races or []) | join(', ') }}</races>
  </setting>
  <sampleExperiencePointValues>
    {% for exp in experiencePointValues %}
    {{ exp.action }}: {{ exp.value }}
    {% endfor %}
  </sampleExperiencePointValues>
  <itemRarityLevels>{% for rarity in rarityDefinitions %}
    {{ rarity.label }}: {{ rarity.description }}
{% endfor %}  </itemRarityLevels>
  <needBarDefinitions>
    {% for bar in needBarDefinitions %}
    <needBar>
      <id>{{ bar.id | default('unknown', true) }}</id>
      <name>{{ bar.name }}</name>
      <description>{{ bar.description }}</description>
      <playerOnly>{{ bar.playerOnly | default(false) }}</playerOnly>
      <relatedAttribute>{{ bar.relatedAttribute | default('', true) }}</relatedAttribute>
      <min>{{ bar.min | default('', true) }}</min>
      <max>{{ bar.max | default('', true) }}</max>
      <initialValue>{{ bar.initialValue | default('', true) }}</initialValue>
      <changePerTurn>{{ bar.changePerTurn | default(0) }}</changePerTurn>
      <relativeToLevel>{{ bar.relativeToLevel | default(false) }}</relativeToLevel>
      <effectThresholds>
        {% for threshold in bar.effectThresholds %}
        <threshold>
          <value>{{ threshold.threshold | default('', true) }}</value>
          <name>{{ threshold.name | default('', true) }}</name>
          <effect>{{ threshold.effect | default('', true) }}</effect>
        </threshold>
        {% endfor %}
      </effectThresholds>
      <increases>
        <small>
          {% for item in bar.increases.small %}<trigger>{{ item }}</trigger>{% endfor %}
        </small>
        <medium>
          {% for item in bar.increases.medium %}<trigger>{{ item }}</trigger>{% endfor %}
        </medium>
        <large>
          {% for item in bar.increases.large %}<trigger>{{ item }}</trigger>{% endfor %}
        </large>
        <fill>
          {% for item in bar.increases.fill %}<trigger>{{ item }}</trigger>{% endfor %}
        </fill>
      </increases>
      <decreases>
        <small>
          {% for item in bar.decreases.small %}<trigger>{{ item }}</trigger>{% endfor %}
        </small>
        <large>
          {% for item in bar.decreases.large %}<trigger>{{ item }}</trigger>{% endfor %}
        </large>
      </decreases>
    </needBar>
    {% endfor %}
  </needBarDefinitions>
  <gameHistory>{{ gameHistory }}</gameHistory>
  <worldOutline>
    {% for regionName, locations in worldOutline.regions %}
    <region name="{{ regionName | escape }}">
      {% for loc in locations %}<location>{{ loc }}</location>
      {% endfor %}
    </region>
    {% endfor %}
  </worldOutline>
  <currentRegion>
    <name>{{ regionContext.name }}</name>
    <description>{{ regionContext.description }}</description>
    <secrets>
      {% for secret in regionContext.secrets %}<secret>{{ secret }}</secret>
      {% endfor %} 
    </secrets>
    <locations>
      {% for loc in regionContext.locations %}<locationName>{{ loc.name }}</locationName>
      {% endfor %}</locations>
  </currentRegion>
  <currentLocation>
    <name>{{ currentLocation.name }}</name>
    <description>{{ currentLocation.description }}</description>
    <statusEffects>
      {% for effect in currentLocation.statusEffects %}
      <effect>
        <description>{{ effect.description }}</description>
        <duration>{{ effect.duration | default('unknown') }}</duration>
      </effect>
      {% endfor %}
    </statusEffects>
    <exits>
      {% for exit in currentLocation.exits %}
      <exit>
        <name>{{ exit.name }}</name>
        <isVehicle>{{ exit.isVehicle | default(false) }}</isVehicle>
        {% if exit.isVehicle %}<vehicleType>{{ exit.vehicleType | default('', true) }}</vehicleType>{% endif %}
      </exit>
      {% endfor %}
    </exits>
    <items>
      {% for item in currentLocation.items %}
      <item>
        <name>{{ item.name }}</name>
        <description>{{ item.description }}</description>
        <isScenery>{{ item.isScenery | default(false) }}</isScenery>
        <isVehicle>{{ item.isVehicle | default(false) }}</isVehicle>
        <rarity>{{ item.rarity | default('common') }}</rarity>
        <value>{{ item.value | default(0) }}</value>
        <statusEffects>
          {% for effect in item.statusEffects %}
          <effect>
            <description>{{ effect.description }}</description>
            <duration>{{ effect.duration | default('unknown') }}</duration>
          </effect>
          {% endfor %}
        </statusEffects>
        <weight>{{ item.weight | default(0) }}</weight>
        <properties>{{ item.properties | default('', true) }}</properties>
      </item>
      {% endfor %}
    </items>
    <npcs>
      {% for npc in npcs %}
      <npc>
        <id>{{ npc.id | default('unknown', true) }}</id>
        <name>{{ npc.name }}</name>
        <description>{{ npc.description }}</description>
        <class>{{ npc.class | default('Unknown') }}</class>
        <race>{{ npc.race | default('Unknown') }}</race>
        <personality>
          <type>{{ npc.personality.type | default('Unknown', true) }}</type>
          <traits>{{ npc.personality.traits | default('None', true) }}</traits>
          <goals>
              {% for goal in npc.personality.goals %}
              <goal>{{ goal }}</goal>
              {% endfor %}
          </goals>
          <notes>{{ npc.personality.notes | default('', true) }}</notes>
        </personality>
{#        <health>{{ npc.health | default('unknown') }}</health>
        <maxHealth>{{ npc.maxHealth | default('unknown') }}</maxHealth> #}
        <dispositionsTowardsPlayer>
          {% for disposition in npc.dispositionsTowardsPlayer %}
          <dispositionTowardsPlayer>
            <type>{{ disposition.type }}</type>
            <intensity>{{ disposition.intensityName }}</intensity>
          </dispositionTowardsPlayer>
          {% endfor %}
        </dispositionsTowardsPlayer>
        <importantMemories>
          {% for entry in npc.selectedImportantMemories %}
          <memory>{{ entry.memory }}</memory>
          {% endfor %}
        </importantMemories>
        <inventory>
          {% for item in npc.inventory %}<item>
            <name>{{ item.name }}</name>
            <equippedSlot>{{ item.equippedSlot | default('none') }}</equippedSlot>
          </item>
        {% endfor %}</inventory>
        <skills>
          {% for skill in npc.skills %}{% if skill.value > 1 %}{{ skill.name }}, {% endif %}{% endfor %}
        </skills>
        <abilities>
          {% for ability in npc.abilities %}
          <ability>
            <name>{{ ability.name }}</name>
            <description>{{ ability.description }}</description>
            <type>{{ ability.type }}</type>
            <level>{{ ability.level }}</level>
          </ability>
          {% endfor %}
        </abilities>
        <statusEffects>
          {% for effect in npc.statusEffects %}
          <effect>
            <description>{{ effect.description }}</description>
            <duration>{{ effect.duration | default('unknown') }}</duration>
          </effect>
          {% endfor %}
        </statusEffects>
        <needBars>
          {% for bar in npc.needBars %}
          <needBar>
            <name>{{ bar.name }}</name>
            <currentThreshold>
              <name>{% if bar.currentThreshold %}{{ bar.currentThreshold.name | default('Neutral') }}{% else %}Neutral{% endif %}</name>
              <effect>{% if bar.currentThreshold %}{{ bar.currentThreshold.effect | default('No active effect') }}{% else %}No active effect{% endif %}</effect>
              <value>{% if bar.currentThreshold %}{{ bar.currentThreshold.threshold | default('', true) }}{% else %}{% endif %}</value>
            </currentThreshold>
          </needBar>
          {% endfor %}
        </needBars>
      </npc>
      {% endfor %}
    </npcs>
    <itemsInScene>
      {% for item in itemsInScene %}{% if not item.isScenery %}
      <item>
        <name>{{ item.name }}</name>
        <description>{{ item.description }}</description>
        <isScenery>{{ item.isScenery | default(false) }}</isScenery>
        <isVehicle>{{ item.isVehicle | default(false) }}</isVehicle>
        <rarity>{{ item.rarity | default('common') }}</rarity>
        <value>{{ item.value | default(0) }}</value>
        <statusEffects>
          {% for effect in item.statusEffects %}
          <effect>
            <description>{{ effect.description }}</description>
            <duration>{{ effect.duration | default('unknown') }}</duration>
          </effect>
          {% endfor %}
        </statusEffects>
        <weight>{{ item.weight | default(0) }}</weight>
        <properties>{{ item.properties | default('', true) }}</properties>
      </item>
      {% endif %}{% endfor %}
    </itemsInScene>
    <sceneryList>
      {% for item in itemsInScene %}{% if item.isScenery %}
      <sceneryItem>
        <name>{{ item.name }}</name>
        <description>{{ item.description }}</description>
        <isScenery>{{ item.isScenery | default(true) }}</isScenery>
        <isVehicle>{{ item.isVehicle | default(false) }}</isVehicle>
        <rarity>{{ item.rarity | default('common') }}</rarity>
        <value>{{ item.value | default(0) }}</value>
        <statusEffects>
          {% for effect in item.statusEffects %}
          <effect>
            <description>{{ effect.description }}</description>
            <duration>{{ effect.duration | default('unknown') }}</duration>
          </effect>
          {% endfor %}
        </statusEffects>
        <weight>{{ item.weight | default(0) }}</weight>
        <properties>{{ item.properties | default('', true) }}</properties>
      </sceneryItem>
      {% endif %}{% endfor %}
    </sceneryList>  
  </currentLocation>
  <player>
    <name>{{ currentPlayer.name }}</name>
    <description>{{ currentPlayer.description }}</description>{#
    <health>{{ currentPlayer.health }}</health>
    <maxHealth>{{ currentPlayer.maxHealth }}</maxHealth>#}
    <class>{{ currentPlayer.class }}</class>
    <race>{{ currentPlayer.race }}</race>
    <currency>{{ currentPlayer.currency | default(0) }}</currency>
    <statusEffects>
      {% for effect in currentPlayer.statusEffects %}
      <effect>
        <description>{{ effect.description }}</description>
        <duration>{{ effect.duration | default('unknown') }}</duration>
      </effect>
      {% endfor %}
    </statusEffects>
      <skills>
        {% for skill in currentPlayer.skills %}{% if skill.value > 1 %}{{ skill.name }}, {% endif %}{% endfor %}
      </skills>
    <abilities>
      {% for ability in currentPlayer.abilities %}
      <ability>
        <name>{{ ability.name }}</name>
        <description>{{ ability.description }}</description>
        <type>{{ ability.type }}</type>
        <level>{{ ability.level }}</level>
      </ability>
      {% endfor %}
    </abilities>
    <inventory>
      {% for item in currentPlayer.inventory %}
      <item>
        <name>{{ item.name }}</name>
        <description>{{ item.description }}</description>
        <equippedSlot>{{ item.equippedSlot | default('none') }}</equippedSlot>
        <statusEffects>
          {% for effect in item.statusEffects %}
          <effect>
            <description>{{ effect.description }}</description>
            <duration>{{ effect.duration | default('unknown') }}</duration>
          </effect>
          {% endfor %}
        </statusEffects>
        <value>{{ item.value | default(0) }}</value>
        <weight>{{ item.weight | default(0) }}</weight>
        <properties>{{ item.properties | default('', true) }}</properties>
      </item>
      {% endfor %}
    </inventory>
    <needBars>
      {% for bar in currentPlayer.needBars %}
      <needBar>
        <name>{{ bar.name }}</name>
        <currentThreshold>
          <name>{% if bar.currentThreshold %}{{ bar.currentThreshold.name | default('Neutral') }}{% else %}Neutral{% endif %}</name>
          <effect>{% if bar.currentThreshold %}{{ bar.currentThreshold.effect | default('No active effect') }}{% else %}No active effect{% endif %}</effect>
          <value>{% if bar.currentThreshold %}{{ bar.currentThreshold.threshold | default('', true) }}{% else %}{% endif %}</value>
        </currentThreshold>
      </needBar>
      {% endfor %}
    </needBars>
    <quests>
      {% for quest in currentPlayer.currentQuests %}
      <quest>
        <name>{{ quest.name }}</name>
        <description>{{ quest.description }}</description>
        {% if quest.secretNotes %}<secretNotes>{{ quest.secretNotes }}</secretNotes>{% endif -%}
        <objectives>
          {%- for objective in quest.objectives %}
          <objective completed="{{ objective.completed }}" optional="{{ objective.optional }}" index="{{ loop.index0 }}">{{ objective.description }}</objective>
          {% endfor -%}
        </objectives>
        <giver>{{ quest.giver }}</giver>
      </quest>
      {% endfor %}
    </quests>
  </player>
  <playerParty>
    {% for member in party %}
    <member>
      <id>{{ member.id | default('unknown', true) }}</id>
      <name>{{ member.name }}</name>
      <description>{{ member.description }}</description>
      <class>{{ member.class | default('Unknown') }}</class>
      <race>{{ member.race | default('Unknown') }}</race>
      <personality>
        <type>{{ member.personality.type | default('Unknown', true) }}</type>
        <traits>{{ member.personality.traits | default('None', true) }}</traits>
        <goals>
          {% for goal in member.personality.goals %}<goal>{{ goal }}</goal>
          {% endfor %}
        </goals>
        <notes>{{ member.personality.notes | default('', true) }}</notes>
      </personality>
{#      <health>{{ member.health | default('unknown') }}</health>
      <maxHealth>{{ member.maxHealth | default('unknown') }}</maxHealth> #}
      <dispositionsTowardsPlayer>
        {% for disposition in member.dispositionsTowardsPlayer %}
        <dispositionTowardsPlayer>
          <type>{{ disposition.type }}</type>
          <intensity>{{ disposition.intensityName }}</intensity>
        </dispositionTowardsPlayer>
        {% endfor %}
      </dispositionsTowardsPlayer>
      <importantMemories>
        {% for entry in member.selectedImportantMemories %}
        <memory>{{ entry.memory }}</memory>
        {% endfor %}
      </importantMemories>
      <inventory>
        {% for item in member.inventory %}<item>
          <name>{{ item.name }}</name>
          <equippedSlot>{{ item.equippedSlot | default('none') }}</equippedSlot>
        </item>
      {% endfor %}</inventory>
      <skills>
        {% for skill in member.skills %}{% if skill.value > 1 %}{{ skill.name }}, {% endif %}{% endfor %}
      </skills>
      <abilities>
        {% for ability in member.abilities %}
        <ability>
          <name>{{ ability.name }}</name>
          <description>{{ ability.description }}</description>
          <type>{{ ability.type }}</type>
          <level>{{ ability.level }}</level>
        </ability>
        {% endfor %}
      </abilities>
      <statusEffects>
        {% for effect in member.statusEffects %}
        <effect>
          <description>{{ effect.description }}</description>
          <duration>{{ effect.duration | default('unknown') }}</duration>
        </effect>
        {% endfor %}
      </statusEffects>
      <needBars>
        {% for bar in member.needBars %}
        <needBar>
          <name>{{ bar.name }}</name>
          <currentThreshold>
            <name>{% if bar.currentThreshold %}{{ bar.currentThreshold.name | default('Neutral') }}{% else %}Neutral{% endif %}</name>
            <effect>{% if bar.currentThreshold %}{{ bar.currentThreshold.effect | default('No active effect') }}{% else %}No active effect{% endif %}</effect>
            <value>{% if bar.currentThreshold %}{{ bar.currentThreshold.threshold | default('', true) }}{% else %}{% endif %}</value>
          </currentThreshold>
        </needBar>
        {% endfor %}
      </needBars>
    </member>
    {% endfor %}
  </playerParty>
  <additionalLore>
    {{ additionalLore }}
  </additionalLore>
</context>

{% include "_includes/" + promptType + ".njk" %}

</generationPrompt>

</template>
