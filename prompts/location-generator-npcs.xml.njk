<context>
Here is a list of all character attributes:
{% for attrName, attrDef in attributeDefinitions %}- {{ attrName }}: {{ attrDef.description }} 
{% endfor %}

Attributes for an NPC should be rated as one of: poor, below average, average, above average, excellent, legendary.
{# 
These NPCs are deceased:
{% for word in bannedWords %}- {{ word }}
{% endfor %}
#}
Here's a list of existing NPCs:
{% for npc in existingNpcsInOtherRegions %}- {{ npc.name }}: {{ npc.shortDescription }} 
{% endfor %}
- Nyx: Self-appointed guardian of the location

{#
Here's a list of existing NPCs in other locations in this region:
{% for npc in existingNpcsInOtherLocations %}- {{ npc.name }}: {{ npc.shortDescription }} 
{% endfor %}

Here's a list of existing NPCs already present in this location:
{% for npc in existingNpcsInThisLocation %}- {{ npc.name }}: {{ npc.shortDescription }} 
{% endfor %}
</context>
#}
Generate {{ numNpcs }} new NPC(s) {% if numHostiles > 0 %}and {{ numHostiles }} new hostile entities (can be NPCs, monsters, or other entities of any type that makes sense) {% endif %}for the location above. Any NPCs listed above have already been generated and don't need to be generated again. Do not rehash existing character concepts. Advance the story by creating new character concepts that are distinct from the existing ones. Be sure to generate any NPCs mentioned in the description of the location. Output the NPCs in this format:

<response>
<npcs>
<npc>
<name>Full name of the NPC</name>
<description>3 sentence description of the NPC, including their role in the location and any notable characteristics or behaviors</description>
<shortDescription>10 words or less description of the NPC</shortDescription>
<isHostile>true or false</isHostile>
<class>RPG class like warrior or cyberninja, job like blacksmith or cashier, or osmething generic like townsperson, peasant or citizen</class>

<race>their race (human, elf, android, etc)</race>

<relativeLevel>Integer from -3 to +3</relativeLevel>
<currency>Integer amount of currency the NPC has on hand, based on setting norms.</currency>
<attributes>
{% for attrName, attrDef in attributeDefinitions %}  <attribute name="{{ attrName }}">rating (see above)</attribute>
{% endfor %}
</attributes>
<personality>
    <type>Myers-Briggs type, -dere archetype, Enneagram type, DnD alignment, or "automaton", as appropriate -- whatever works best. Optionally, 2 types separated by commas, so long as they make sense together.</type>
    <traits>optionally, any neurodivergences or mental health conditions (e.g. ADHD, autism, anxiety, depression, bipolar, PTSD, sociopathy, psychopathy, etc). Comma separated, usually none, no more than 3</traits>
    <characterArc>
        <shortTerm>A brief description of the NPC's short-term active personal growth arc</shortTerm>
        <longTerm>A brief description of the NPC's long-term personal growth arc or development over the course of the campaign or story</longTerm>
    </characterArc>
    <goals>
        <goal>A specific, long-term goal the character is working towards</goal>
        <goal>Another specific, long-term goal the character is working towards</goal>
        <goal>A specific, short-term goal the character is actively pursuing</goal>
        <goal>Another specific, short-term goal the character is actively pursuing</goal>
    </goals>
    <notes>0 to 2 sentences of additional information not covered by the above</notes>
</personality>
<healthAttribute>Name of the attribute (from the list) that determines health gained at level up. Usually something related to toughness or stamina, but may differ for particularly strange npcs or creatures</healthAttribute>
</npc>
[… more NPCs …]

</npcs>
<memories>
    <npcMemories npc ="Exact name of the NPC">
        <memory>Short memory of a significant recent event from the NPC's perspective, in the style of a diary entry or personal note. No more than 2 sentences long. Memories should include interactions with other NPCs, places, things, etc.</memory>
        [... total of 3 memories ...]
    </npcMemories>
    [... an npcMemories record for each generated NPC ...]
</memories>
</response>
