<template>
    <comment>This prompt runs after the region or location generator prompt, with the context from the generator still included, hence the lack of a system prompt and other context.</comment>
    <role>NPC name regenerator</role>
<generationPrompt>
<context>
Here's a list of existing NPCs:
{% for word in bannedWords %} {{ word | capitalize }}: deceased 
{% endfor %}{% for npc in existingNpcs %} {{ npc.name }}: {{ npc.shortDescription }} 
{% endfor %}

</context>

Here is a list of NPC names that use banned words:
<npcsToRegenerateName>
{% for npc in npcToRegenerateName %}- {{ npc.name }}
<npc>
  <name>{{ npc.name }}</name>
  <shortDescription>{{ npc.shortDescription }}</shortDescription>
  <description>{{ npc.detailedDescription }}</description>
</npc>
{% endfor %}
</npcsToRegenerateName>

Give each NPC a different name that fits the setting and culture of the location. The name should be unique among all NPCs. Replace their name in the description (and short description, if applicable) as well. Return them in this format:

For each NPC, generate a set of 20 new, different candidate names that fit the setting and culture of the location, and does not use any of the banned words. The names should be unique among all NPCs in this region. Write their original description and short description with the old name replaced by the placeholder '%NAME%'. Return them in this format:

<npcs>
  <npc>
    <oldName>original npc name</oldName>
    <name index='1'>new npc name</name>
    <name index='2'>new npc name</name>
    <name index='3'>new npc name</name>
    <name index='4'>new npc name</name>
    <name index='5'>new npc name</name>
    ...
    <name index='20'>new npc name</name>
    <shortDescription>short description</shortDescription>
    <description>description</description>
  </npc>
  <npc>
    ... the rest of the npcs ...
  </npc>
</npcs>
</generationPrompt>
</template>